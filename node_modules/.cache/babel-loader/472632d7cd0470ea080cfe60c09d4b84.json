{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/richard/Desktop/CRUD_REACT/src/components/typewriter/TypeWriter.js\";\nimport React, { Component } from 'react';\nimport './TypeWriter.scss';\n\nclass TypeWriter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.type = () => {\n      const {\n        wordIndex,\n        isDeleting,\n        text,\n        wait\n      } = this.state;\n      const currentIndex = wordIndex % this.props.words.length;\n      const currentWord = this.props.words[currentIndex];\n      this.setState({\n        isWaiting: false\n      });\n\n      if (isDeleting) {\n        this.setState({\n          text: currentWord.substring(0, text.length - 1)\n        });\n      } else {\n        this.setState({\n          text: currentWord.substring(0, text.length + 1)\n        });\n      }\n\n      let typeSpeed = 200;\n\n      if (this.isDeleting) {\n        typeSpeed /= 2;\n      }\n\n      if (!isDeleting && text === currentWord) {\n        typeSpeed = Math.random() * Math.floor(3) * 1000;\n        this.setState({\n          isWaiting: true,\n          isDeleting: true\n        });\n      } else if (isDeleting && text === '') {\n        this.setState({\n          isDeleting: false,\n          wordIndex: this.state.wordIndex + 1\n        });\n        typeSpeed = 400;\n      }\n\n      setTimeout(() => this.type(), typeSpeed);\n    };\n\n    this.state = {\n      text: '',\n      wordIndex: 0,\n      isDeleting: false,\n      isWaiting: false\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('load', this.type());\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('load', this.type());\n  }\n\n  render() {\n    const {\n      staticText\n    } = this.props;\n    const {\n      text,\n      isWaiting\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typewriter\",\n      children: [staticText.map((sentence, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `sentence ${index === staticText.length - 1 ? 'last-sentence' : ''}`,\n        children: [sentence, \"\\xA0\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `dynamic-text ${isWaiting ? 'fade' : ''}`,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst staticText = [`Hello, I'm Bruna.`, 'I like'];\nconst words = ['cats', 'coffee', 'fashion', 'coding', 'skating', 'music'];","map":{"version":3,"sources":["/Users/richard/Desktop/CRUD_REACT/src/components/typewriter/TypeWriter.js"],"names":["React","Component","TypeWriter","constructor","props","type","wordIndex","isDeleting","text","wait","state","currentIndex","words","length","currentWord","setState","isWaiting","substring","typeSpeed","Math","random","floor","setTimeout","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","staticText","map","sentence","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './TypeWriter.scss';\n\nclass TypeWriter extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      text: '',\n      wordIndex: 0,\n      isDeleting: false,\n      isWaiting: false,\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('load', this.type())\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('load', this.type())\n  }\n\n  type = () => {\n    const { wordIndex, isDeleting, text, wait } = this.state\n    const currentIndex = wordIndex % this.props.words.length\n    const currentWord = this.props.words[currentIndex]\n\n    this.setState({ isWaiting: false })\n\n    if (isDeleting) {\n      this.setState({\n        text: currentWord.substring(0, text.length - 1)\n      })\n    } else {\n      this.setState({\n        text: currentWord.substring(0, text.length + 1)\n      })\n    }\n\n    let typeSpeed = 200\n\n    if (this.isDeleting) {\n      typeSpeed /= 2\n    }\n\n    if (!isDeleting && (text === currentWord)) {\n      typeSpeed = (Math.random() * Math.floor(3)) * 1000\n\n      this.setState({\n        isWaiting: true,\n        isDeleting: true,\n      })\n    } else if (isDeleting && text === '') {\n      this.setState({\n        isDeleting: false,\n        wordIndex: this.state.wordIndex + 1\n      })\n      typeSpeed = 400\n    }\n\n    setTimeout(() => this.type(), typeSpeed)\n  }\n\n  render() {\n    const { staticText } = this.props\n    const { text, isWaiting } = this.state\n\n    return (\n      <div className=\"typewriter\">\n      { staticText.map((sentence, index) => (\n        <span key={ index } className={`sentence ${(index === staticText.length - 1) ? 'last-sentence' : '' }`}>{ sentence }&nbsp;</span>\n      ))}\n        <span className={`dynamic-text ${ isWaiting ? 'fade' : '' }`}>{text}</span>\n      </div>\n    )\n  }\n}\n\nconst staticText = [`Hello, I'm Bruna.`, 'I like']\nconst words = ['cats', 'coffee', 'fashion', 'coding', 'skating', 'music']\n\n"]},"metadata":{},"sourceType":"module"}