{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/richard/Desktop/CRUD_REACT/src/components/Button.js\";\nimport React from 'react';\nimport './Button.css';\nconst STYLES = ['btn--primary', 'btn--outline'];\nconst SIZES = ['btn--medium', 'btn--large'];\nexport const Button = ({\n  children,\n  type,\n  onClick,\n  buttonStyle,\n  buttonSize\n}) => {\n  const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `btn ${checkoutButtonStyle} ${checkoutButtonSize}`,\n    onClick: onClick,\n    type: type,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n};\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/richard/Desktop/CRUD_REACT/src/components/Button.js"],"names":["React","STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","checkoutButtonStyle","checkoutButtonSize"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AAGA,MAAMC,MAAM,GAAG,CACX,cADW,EAEX,cAFW,CAAf;AAOA,MAAMC,KAAK,GAAG,CACV,aADU,EAEV,YAFU,CAAd;AAMA,OAAO,MAAMC,MAAM,GAAE,CAAC;AAClBC,EAAAA,QADkB;AAElBC,EAAAA,IAFkB;AAGlBC,EAAAA,OAHkB;AAIlBC,EAAAA,WAJkB;AAKlBC,EAAAA;AALkB,CAAD,KAOf;AACF,QAAMC,gBAAgB,GAAGR,MAAM,CAACS,QAAP,CAAgBH,WAAhB,IAA+BA,WAA/B,GAA6CN,MAAM,CAAC,CAAD,CAA5E;AAEA,QAAMU,eAAe,GAAGT,KAAK,CAACQ,QAAN,CAAeF,UAAf,IAA6BA,UAA7B,GAA0CN,KAAK,CAAC,CAAD,CAAvE;AAEC,sBACI;AAAQ,IAAA,SAAS,EAAG,OAAMU,mBAAoB,IAAGC,kBAAmB,EAApE;AAAuE,IAAA,OAAO,EAAEP,OAAhF;AACA,IAAA,IAAI,EAAED,IADN;AAAA,cAEKD;AAFL;AAAA;AAAA;AAAA;AAAA,UADJ;AAMJ,CAlBM;KAAMD,M","sourcesContent":["import React from 'react';\nimport './Button.css';\n\n\nconst STYLES = [\n    'btn--primary',\n    'btn--outline'\n\n\n]\n\nconst SIZES = [\n    'btn--medium',\n    'btn--large'\n\n]\n\nexport const Button =({\n    children,\n    type,\n    onClick,\n    buttonStyle,\n    buttonSize\n\n}) => {\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0]\n\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0]\n\n     return (\n         <button className={`btn ${checkoutButtonStyle} ${checkoutButtonSize}`} onClick={onClick}\n         type={type}>\n             {children}\n         </button>\n     )\n}"]},"metadata":{},"sourceType":"module"}